string.ascii_lowercase
少文字のローマ字が入っている。この値はロケールに依存せず、固定。
ある変数がアルファベットかどうかをチェックするときに使う。lowercaseには少文字すべてが入っている。

string.ascii_uppercase
大文字のローマ字が入っている。この値はロケールに依存せず、固定。
ある変数がアルファベットかどうかをチェックするときに使う。uppercaseには大文字すべてが入っている。

string.ascii_letters
lowercaseとuppercaseを合わせたもの。この値はロケールに依存しません。

string.digits
文字列'0123456789'

string.hexdigits
文字列 '0123456789abcdefABCDEF'

string.printable
印刷可能なASCII文字で構成される文字列です。
digits,ascii_letters,punctuation,whitespaceをくみあわせたもの

string.whitespace
空白として扱われるASCII文字すべてを含む文字列です。
殆どのシステムでは、これはスペース、タブ、改行、復帰、海頁、垂直タブです。

format
主要なAPIメソッドです。書式化文字列と、任意引数およびキーワード引数のセットを取ります。
これはvformat()を呼び出す単なるラッパーです。

vformat
この関数はフォーマットの実際の仕事をします。
この関数は、*args及び**kwargsシンタックスを使用して、辞書をここの引数としてunpackしてから再度parkするのでは￥なく、引数として予め用意した辞書を渡したい場合のために、独立した関数として公開されます。
vformat()は、書式文字列を文字データと置換フィールドに分解する仕事をします。

parse
format_stringを探査し、タプルのイテラブルを返します。
これはvformat()が文字列を文字としての文字データ也置換フィールドに展開するために使用されます。
タプルの値は、概念的に文字としての文字データと、それに続く単一の置換ふいフィールドを表現します。
文字列としての文字データがない場合は、literal_textは長さが0の文字列とななります。

get_field
引数として与えたparse()により返されるfield_nameを書式指定対象オブジェクトに変換します。
返り値はタプルです。デフォルトではPEP 3101に規定される"0[name]"や"label.title"のような形式の文字列を引数としてとります。

get_value
与えられたフィールドの値を取り出します。
key引数は整数でも文字列でも構いません。
整数の場合は、ポジション引数argsのインデックス番号を示します。
文字列の場合は、名前付きの引数kwargsを意味します。

check_unused_args
希望に応じて未使用の引数がないか確認する機能を実装します。
この関数への引数は、書式指定文字列で実際に参照されるすべての引数のキーのsetと、vformatに渡されるargsとkwargsへの参照です。
仕様されていない引数のsetは、これらのあらメータから計算されます。
check_unused_args()は、確認の結果が偽である場合に例外を送出するものとみなされます。

format_field
単純に組み込みのグローバル関数format()を呼び出します。
このメソッドは、サブクラスをオーバーライドするために提供されます。

convert_field
(get_field()が返す)値を(parse()メソッドが返すタプルの形式で)与えられた変換タイプとして変換します。デフォルトバージョンは's','r','a'変換タイプを理解します。

